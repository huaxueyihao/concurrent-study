活跃性问题：
死锁

饥饿：
餐厅排对吃饭，插队打饭，且打完饭不走，后面为打饭的被饿死了
理解：线程有优先级，优先级低的可能得不到执行，线程获得执行权，且不释放，其他线程获得不到执行权

饥饿与公平
情形
1、高优先级吞噬所有低优先级的cpu时间片
2、线程被永久堵塞在等待进入同步快的状态
3、等待的线程永远不被唤醒
如何避免饥饿问题？
1、设置合理的优先级
2、使用锁来代替synchronized
3、

活锁：
两个礼貌的人，相遇于独木桥，进行礼让，退回，走另一个独木桥；很巧，两人又相遇于同一个独木桥